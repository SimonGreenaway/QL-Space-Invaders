! Generated by c68 4.5 27 Feb 99 (Sep  1 2022) from "image.i"
	.sect	.text
	.sect	.rom
	.sect	.data
	.sect	.bss
	.sect	.data
	.align	2
	.extern _masks
_masks:
	.data2	32575,57295,63475,65020
	.extern _shifts
_shifts:
	.data1	64,16,4,1
	.sect	.text
I_1:
	.ascii	"%c"
	.data1	0x0
	.align	2
	.extern _binPrint
_binPrint:
	link	a6,#-8
	movem.l	d3/d4,-(a7)
	move.l	#32768,d4
	move.l	#15,d3
	bra	I_5
I_4:
	clr.l	d0
	move.b	13(a6),d0
	sub.l	#1,d0
	cmp.l	d0,d3
	bgt	I_8
	move.l	8(a6),d0
	and.l	d4,d0
	beq	I_9
	move.l	#49,d0
	bra	I_10
I_9:
	move.l	#48,d0
I_10:
	move.l	d0,-(a7)
	pea	I_1
	jsr	_printf
	add.w	#8,a7
I_8:
	asr.l	#1,d4
	sub.l	#1,d3
I_5:
	tst.l	d3
	bge	I_4
	movem.l	-16(a6),d3/d4
	unlk	a6
	rts
	.sect	.data
	.align	2
	.extern __stack
__stack:
	.data4	4096
	.extern __mneed
__mneed:
	.data4	4096
	.extern __memmax
__memmax:
	.data4	10238976
	.extern __memincr
__memincr:
	.data4	1024
	.extern __memqdos
__memqdos:
	.data4	20480
	.extern _memused
_memused:
	.data4	0
	.sect	.text
	.align	2
	.extern _mymalloc
_mymalloc:
	link	a6,#0
	move.l	8(a6),d0
	add.l	d0,_memused
	move.l	8(a6),-(a7)
	jsr	_malloc
	unlk	a6
	rts
	.align	2
	.extern _init
_init:
	link	a6,#-8
	move.l	d3,-(a7)
	move.w	#8,-6(a6)
	clr.w	-8(a6)
	pea	32768
	jsr	_mymalloc
	move.l	d0,_background
	pea	32768
	jsr	_mymalloc
	move.l	d0,_scratch
	move.l	_background,a0
	sub.l	#131072,a0
	move.l	a0,_secondAddress
	add.w	#8,a7
	pea	-8(a6)
	pea	-6(a6)
	jsr	__mt_dmode
	move.l	#0,d3
	bra	I_17
I_16:
	move.l	d3,d0
	asl.l	#7,d0
	add.l	_scratch,d0
	move.l	d3,d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	#_addresses,a0
	move.l	d0,(a0)
	add.l	#1,d3
I_17:
	cmp.l	#256,d3
	blt	I_16
	move.l	#0,d3
	bra	I_21
I_20:
	move.l	#4,d0
	and.l	d3,d0
	asl.l	#7,d0
	move.l	#3,d1
	and.l	d3,d1
	add.l	d1,d0
	move.l	d3,d1
	add.l	d1,d1
	move.l	d1,a0
	add.l	#_bits,a0
	move.w	d0,(a0)
	add.l	#1,d3
I_21:
	move.l	#8,d0
	cmp.l	d3,d0
	bgt	I_20
	move.l	-12(a6),d3
	unlk	a6
	rts
	.align	2
	.extern _cls
_cls:
	link	a6,#0
	pea	32768
	clr.l	-(a7)
	pea	131072
	jsr	__MemSet
	unlk	a6
	rts
	.align	2
	.extern _plot
_plot:
	link	a6,#-4
	movem.l	d3/a2,-(a7)
	move.w	8(a6),d3
	pea	4
	clr.l	d0
	move.w	d3,d0
	move.l	d0,-(a7)
	jsr	.Xldiv
	clr.l	d1
	move.w	10(a6),d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	#_addresses,a0
	add.l	(a0),d0
	move.l	d0,a2
	clr.l	d0
	move.b	13(a6),d0
	add.l	d0,d0
	move.l	d0,a0
	add.l	#_bits,a0
	move.w	(a0),d0
	move.l	#3,d1
	and.w	d3,d1
	and.l	#65535,d1
	move.l	d1,a0
	add.l	#_shifts,a0
	clr.w	d1
	move.b	(a0),d1
	mulu	d1,d0
	move.l	#3,d1
	and.w	d3,d1
	and.l	#65535,d1
	add.l	d1,d1
	move.l	d1,a0
	add.l	#_masks,a0
	move.w	(a0),d1
	clr.w	d2
	move.b	(a2),d2
	and.w	d2,d1
	and.l	#65535,d1
	or.l	d1,d0
	move.b	d0,(a2)
	movem.l	(a7)+,d3/a2
	unlk	a6
	rts
	.align	2
	.extern _spritePlot
_spritePlot:
	link	a6,#-36
	movem.l	d3/d4/d5/a2/a3/a4/a5,-(a7)
	move.l	8(a6),a3
	move.l	52(a3),d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	a3,a0
	move.l	4(a0),a4
	pea	4
	move.l	36(a3),-(a7)
	jsr	.Xldiv
	add.l	d0,d0
	move.l	40(a3),d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	#_addresses,a0
	add.l	(a0),d0
	move.l	d0,-8(a6)
	move.l	-8(a6),a2
	move.l	#64,d0
	move.w	2(a4),d1
	ext.l	d1
	sub.l	d1,d0
	move.l	d0,-16(a6)
	move.l	36(a3),d0
	move.l	#3,d1
	and.l	d1,d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	a4,a0
	move.l	16(a0),a5
	move.l	36(a3),d0
	and.l	d1,d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	a4,a0
	move.l	32(a0),d3
	pea	2
	move.w	2(a4),d0
	ext.l	d0
	move.l	d0,-(a7)
	jsr	.Xldiv
	move.l	d0,-32(a6)
	move.l	#0,d5
	bra	I_31
I_30:
	move.l	#0,d4
	bra	I_35
I_34:
	move.l	d3,a0
	add.l	#2,d3
	move.w	(a0),d0
	and.w	(a2),d0
	or.w	(a5)+,d0
	move.w	d0,(a2)+
	move.l	d3,a0
	add.l	#2,d3
	move.w	(a0),d0
	and.w	(a2),d0
	or.w	(a5)+,d0
	move.w	d0,(a2)+
	move.l	d3,a0
	add.l	#2,d3
	move.w	(a0),d0
	and.w	(a2),d0
	or.w	(a5)+,d0
	move.w	d0,(a2)
	add.l	#1,d4
I_35:
	cmp.l	-32(a6),d4
	bcs	I_34
	move.l	-16(a6),d0
	add.l	d0,d0
	add.l	d0,a2
	add.l	#1,d5
I_31:
	move.w	(a4),d0
	ext.l	d0
	cmp.l	d0,d5
	bcs	I_30
	movem.l	(a7)+,d3/d4/d5/a2/a3/a4/a5
	unlk	a6
	rts
	.align	2
	.extern _imagePlot
_imagePlot:
	link	a6,#-40
	movem.l	d3/d4/d5/d6/d7/a2/a3/a4/a5,-(a7)
	lea	-40(a6),a3
	move.l	16(a6),a4
	lea	-32(a6),a5
	lea	-36(a6),a0
	move.l	a0,d4
	move.l	8(a4),-4(a6)
	move.l	12(a4),d7
	move.l	8(a6),d0
	move.l	#3,d1
	and.l	d1,d0
	add.l	d0,d0
	move.l	d0,d3
	move.l	12(a6),d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	#_addresses,a0
	move.l	(a0),a0
	move.l	8(a6),d0
	lsr.l	#2,d0
	add.l	d0,d0
	add.l	d0,a0
	move.l	a0,a2
	lea	128,a0
	move.w	2(a4),d0
	ext.l	d0
	add.l	d0,d0
	sub.l	d0,a0
	move.l	a0,-20(a6)
	move.l	#0,d6
	bra	I_41
I_40:
	move.l	#0,d5
	bra	I_45
I_44:
	clr.l	(a3)
	move.l	d4,a0
	clr.l	(a0)
	clr.l	(a5)
	move.l	d7,a0
	add.l	#2,d7
	move.w	(a0),(a5)
	move.l	d7,a0
	add.l	#2,d7
	move.l	d4,a1
	move.w	(a0),(a1)
	move.l	-4(a6),a0
	move.w	(a0),(a3)
	move.l	(a5),d0
	lsr.l	d3,d0
	move.l	d0,(a5)
	move.l	d4,a0
	move.l	(a0),d0
	lsr.l	d3,d0
	move.l	d0,(a0)
	move.l	(a3),d0
	lsr.l	d3,d0
	move.l	d0,(a3)
	not.l	d0
	move.l	d0,(a3)
	move.b	(a2),d0
	and.b	(a3),d0
	move.l	d4,a0
	or.b	(a0),d0
	move.b	d0,(a2)+
	move.b	(a2),d0
	and.b	(a3),d0
	or.b	(a5),d0
	move.b	d0,(a2)+
	move.b	1(a3),d0
	and.b	(a2),d0
	move.l	d4,a0
	or.b	1(a0),d0
	move.b	d0,(a2)+
	move.b	1(a3),d0
	and.b	(a2),d0
	or.b	1(a5),d0
	move.b	d0,(a2)+
	move.b	2(a3),d0
	and.b	(a2),d0
	move.l	d4,a0
	or.b	2(a0),d0
	move.b	d0,(a2)+
	move.b	2(a3),d0
	and.b	(a2),d0
	or.b	2(a5),d0
	move.l	a2,a0
	sub.w	#1,a2
	move.b	d0,(a0)
	move.l	#2,d0
	add.l	d0,d5
I_45:
	move.w	2(a4),d0
	ext.l	d0
	cmp.l	d0,d5
	blt	I_44
	move.l	-20(a6),d0
	add.l	d0,a2
	add.l	#1,d6
I_41:
	move.w	(a4),d0
	ext.l	d0
	cmp.l	d0,d6
	bcs	I_40
	movem.l	(a7)+,d3/d4/d5/d6/d7/a2/a3/a4/a5
	unlk	a6
	rts
	.align	2
	.extern _tilePlot
_tilePlot:
	link	a6,#-20
	movem.l	d3/d4/a2/a3,-(a7)
	move.l	12(a6),a2
	move.l	8(a2),-4(a6)
	move.l	12(a2),a3
	move.l	#0,d4
	bra	I_51
I_50:
	move.l	#0,d3
	bra	I_55
I_54:
	pea	4
	clr.l	d0
	move.w	8(a6),d0
	move.l	d0,-(a7)
	jsr	.Xldiv
	clr.l	d1
	move.w	10(a6),d1
	add.l	d4,d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	#_addresses,a0
	add.l	(a0),d0
	add.l	d3,d0
	move.l	d0,-20(a6)
	move.l	-20(a6),a0
	move.b	1(a3),(a0)
	add.l	#2,-4(a6)
	add.w	#2,a3
	add.l	#1,d3
I_55:
	move.w	2(a2),d0
	ext.l	d0
	cmp.l	d0,d3
	blt	I_54
	add.l	#1,d4
I_51:
	move.w	(a2),d0
	ext.l	d0
	cmp.l	d0,d4
	blt	I_50
	movem.l	(a7)+,d3/d4/a2/a3
	unlk	a6
	rts
I_58:
	.ascii	"Error reading library!"
	.data1	0xa,0x0
	.align	2
	.extern _readLine
_readLine:
	link	a6,#0
	move.l	d3,-(a7)
	move.l	12(a6),d3
I_61:
	move.l	8(a6),a0
	move.w	24(a0),d0
	and.w	#32,d0
	beq	I_64
	pea	I_58
	jsr	_puts
	pea	1
	jsr	_exit
	add.w	#8,a7
I_64:
	move.l	8(a6),-(a7)
	pea	80
	move.l	d3,-(a7)
	jsr	_fgets
	lea	12(a7),a7
	move.l	d3,a0
	cmp.b	#35,(a0)
	beq	I_61
	move.l	d3,d0
	move.l	-4(a6),d3
	unlk	a6
	rts
	.align	2
	.extern _preShift
_preShift:
	link	a6,#-56
	movem.l	d3/d4/d5/d6/d7/a2/a3/a4/a5,-(a7)
	move.l	8(a6),a2
	lea	-32(a6),a3
	lea	-36(a6),a4
	pea	2
	move.w	2(a2),d0
	muls	(a2),d0
	move.l	d0,-(a7)
	jsr	.Xldiv
	move.l	d0,-20(a6)
	move.l	#0,d4
	bra	I_69
I_68:
	move.l	8(a2),a5
	move.l	12(a2),-44(a6)
	move.l	d4,d0
	add.l	d0,d0
	move.l	d0,d5
	move.l	-20(a6),d0
	add.l	d0,d0
	move.l	d0,d1
	add.l	d0,d0
	add.l	d1,d0
	move.l	#0,d2
	asl.l	d2,d0
	move.l	d0,-(a7)
	jsr	_mymalloc
	move.l	d4,d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	a2,a0
	move.l	d0,16(a0)
	move.l	d0,-52(a6)
	move.l	-20(a6),d0
	add.l	d0,d0
	move.l	d0,d1
	add.l	d0,d0
	add.l	d1,d0
	move.l	#0,d2
	asl.l	d2,d0
	move.l	d0,-(a7)
	jsr	_mymalloc
	move.l	d4,d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	a2,a0
	move.l	d0,32(a0)
	move.l	d0,-56(a6)
	move.l	#0,d7
	bra	I_73
I_72:
	move.l	#0,d6
	bra	I_77
I_76:
	clr.l	(a3)
	clr.l	-28(a6)
	clr.l	-24(a6)
	move.l	-44(a6),a0
	add.l	#2,-44(a6)
	move.w	(a0),-24(a6)
	move.l	-44(a6),a0
	add.l	#2,-44(a6)
	move.w	(a0),-28(a6)
	move.w	(a5)+,(a3)
	add.w	#2,a5
	move.l	-24(a6),d0
	lsr.l	d5,d0
	move.l	d0,-24(a6)
	move.l	-28(a6),d0
	lsr.l	d5,d0
	move.l	d0,-28(a6)
	move.l	(a3),d0
	lsr.l	d5,d0
	move.l	d0,(a3)
	not.l	d0
	move.l	d0,(a3)
	move.l	#0,d3
	bra	I_81
I_80:
	lea	-24(a6),a0
	move.b	0(a0,d3.l),1(a4)
	lea	-28(a6),a0
	move.b	0(a0,d3.l),(a4)
	move.l	-52(a6),a0
	add.l	#2,-52(a6)
	move.w	(a4),(a0)
	move.b	0(a3,d3.l),(a4)
	move.b	0(a3,d3.l),1(a4)
	move.l	-56(a6),a0
	add.l	#2,-56(a6)
	move.w	(a4),(a0)
	add.l	#1,d3
I_81:
	move.l	#3,d0
	cmp.l	d3,d0
	bgt	I_80
	move.l	#2,d0
	add.l	d0,d6
I_77:
	move.w	2(a2),d0
	ext.l	d0
	cmp.l	d0,d6
	blt	I_76
	add.l	#1,d7
I_73:
	move.w	(a2),d0
	ext.l	d0
	cmp.l	d0,d7
	blt	I_72
	add.w	#8,a7
	add.l	#1,d4
I_69:
	move.l	#4,d0
	cmp.l	d4,d0
	bgt	I_68
	movem.l	-92(a6),d3/d4/d5/d6/d7/a2/a3/a4/a5
	unlk	a6
	rts
I_88:
	.ascii	"Sprites loaded."
	.data1	0xa,0x0
I_87:
	.ascii	"  %s"
	.data1	0x0
I_86:
	.ascii	" images: %d"
	.data1	0xa,0x0
I_85:
	.ascii	"Loading library..."
	.data1	0x0
I_84:
	.ascii	"r"
	.data1	0x0
	.align	2
	.extern _loadLibrary
_loadLibrary:
	link	a6,#-112
	movem.l	d3/d4/d5/d6/d7/a2/a3/a4/a5,-(a7)
	move.l	8(a6),a2
	move.l	#48,d5
	lea	-104(a6),a0
	move.l	a0,d7
	lea	_readLine,a3
	lea	__Strtoul,a4
	lea	_mymalloc,a5
	pea	I_84
	move.l	12(a6),-(a7)
	jsr	_fopen
	move.l	d0,d6
	pea	I_85
	jsr	_puts
	lea	12(a7),a7
	move.l	d7,-(a7)
	move.l	d6,-(a7)
	jsr	(a3)
	add.w	#8,a7
	pea	10
	clr.l	-(a7)
	move.l	d7,-(a7)
	jsr	(a4)
	move.l	d0,(a2)
	move.l	(a2),-(a7)
	pea	I_86
	jsr	_printf
	lea	20(a7),a7
	move.l	d5,-(a7)
	move.l	(a2),-(a7)
	lea	.Xulmul,a0
	jsr	(a0)
	move.l	d0,-(a7)
	jsr	(a5)
	move.l	d0,4(a2)
	move.l	#0,d3
	bra	I_92
I_91:
	move.l	d7,-(a7)
	move.l	d6,-(a7)
	jsr	(a3)
	move.l	d7,-(a7)
	pea	I_87
	jsr	_printf
	lea	16(a7),a7
	move.l	d7,-(a7)
	jsr	__StrLen
	add.w	#4,a7
	add.l	#1,d0
	move.l	d0,-(a7)
	jsr	(a5)
	move.l	4(a2),a0
	move.l	d0,(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	(a7)+,d0
	move.l	d0,4(a0)
	move.l	d7,-(a7)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	4(a0),-(a7)
	jsr	__StrCpy
	add.w	#8,a7
	move.l	d7,-(a7)
	move.l	d6,-(a7)
	jsr	(a3)
	add.w	#8,a7
	pea	10
	clr.l	-(a7)
	move.l	d7,-(a7)
	jsr	(a4)
	move.l	4(a2),a0
	lea	12(a7),a7
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	(a7)+,d0
	move.w	d0,2(a0)
	move.l	d7,-(a7)
	move.l	d6,-(a7)
	jsr	(a3)
	add.w	#8,a7
	pea	10
	clr.l	-(a7)
	move.l	d7,-(a7)
	jsr	(a4)
	move.l	4(a2),a0
	lea	12(a7),a7
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	(a7)+,d0
	move.w	d0,(a0)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.w	(a0),d0
	ext.l	d0
	move.l	d0,-(a7)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.w	2(a0),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,-(a7)
	jsr	.Xulmul
	move.l	d0,-108(a6)
	move.l	-108(a6),-(a7)
	jsr	(a5)
	move.l	4(a2),a0
	move.l	d0,(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	(a7)+,d0
	move.l	d0,12(a0)
	move.l	d0,-16(a6)
	move.l	-108(a6),-(a7)
	jsr	(a5)
	move.l	4(a2),a0
	move.l	d0,(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	(a7)+,d0
	move.l	d0,8(a0)
	move.l	d0,-20(a6)
	clr.l	-12(a6)
	bra	I_96
I_95:
	move.l	#0,d4
	bra	I_100
I_99:
	move.l	d7,-(a7)
	move.l	d6,-(a7)
	jsr	(a3)
	add.w	#8,a7
	pea	10
	clr.l	-(a7)
	move.l	d7,-(a7)
	jsr	(a4)
	move.l	-16(a6),a0
	add.l	#2,-16(a6)
	move.w	d0,(a0)
	lea	12(a7),a7
	move.l	d7,-(a7)
	move.l	d6,-(a7)
	jsr	(a3)
	add.w	#8,a7
	pea	10
	clr.l	-(a7)
	move.l	d7,-(a7)
	jsr	(a4)
	move.l	-20(a6),a0
	add.l	#2,-20(a6)
	move.w	d0,(a0)
	lea	12(a7),a7
	add.l	#1,d4
I_100:
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.w	2(a0),d0
	ext.l	d0
	cmp.l	d0,d4
	blt	I_99
	add.l	#1,-12(a6)
I_96:
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.w	(a0),d0
	ext.l	d0
	cmp.l	-12(a6),d0
	bgt	I_95
	move.l	#0,d4
	bra	I_104
I_103:
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	12(a0),a0
	move.l	#1,d0
	add.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	move.w	(a0),d0
	and.l	#255,d0
	move.l	4(a2),a0
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	12(a0),a0
	move.l	d4,d1
	add.l	d1,d1
	add.l	d1,a0
	clr.l	d1
	move.w	(a0),d1
	asl.l	#8,d1
	move.l	(a7)+,d0
	or.l	d1,d0
	move.w	d0,-110(a6)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	12(a0),a0
	move.l	#1,d0
	add.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	clr.l	d0
	move.w	(a0),d0
	asr.l	#8,d0
	move.l	4(a2),a0
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	12(a0),a0
	move.l	d4,d1
	add.l	d1,d1
	add.l	d1,a0
	move.w	(a0),d1
	and.l	#65280,d1
	move.l	(a7)+,d0
	or.l	d1,d0
	move.w	d0,-112(a6)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	12(a0),a0
	move.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	move.w	-110(a6),(a0)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	12(a0),a0
	move.l	#1,d0
	add.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	move.w	-112(a6),(a0)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	8(a0),a0
	move.l	#1,d0
	add.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	move.w	(a0),d0
	and.l	#255,d0
	move.l	4(a2),a0
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	8(a0),a0
	move.l	d4,d1
	add.l	d1,d1
	add.l	d1,a0
	clr.l	d1
	move.w	(a0),d1
	asl.l	#8,d1
	move.l	(a7)+,d0
	or.l	d1,d0
	move.w	d0,-110(a6)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	8(a0),a0
	move.l	#1,d0
	add.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	clr.l	d0
	move.w	(a0),d0
	asr.l	#8,d0
	move.l	4(a2),a0
	move.l	d0,-(a7)
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	d0,d1
	move.l	(a7)+,a0
	add.l	d1,a0
	move.l	8(a0),a0
	move.l	d4,d1
	add.l	d1,d1
	add.l	d1,a0
	move.w	(a0),d1
	and.l	#65280,d1
	move.l	(a7)+,d0
	or.l	d1,d0
	move.w	d0,-112(a6)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	8(a0),a0
	move.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	move.w	-110(a6),(a0)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.l	8(a0),a0
	move.l	#1,d0
	add.l	d4,d0
	add.l	d0,d0
	add.l	d0,a0
	move.w	-112(a6),(a0)
	move.l	#2,d0
	add.l	d0,d4
I_104:
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.w	(a0),d0
	ext.l	d0
	move.l	d0,-(a7)
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	move.w	2(a0),d0
	ext.l	d0
	add.l	d0,d0
	move.l	d0,-(a7)
	jsr	.Xlmul
	cmp.l	d0,d4
	blt	I_103
	tst.l	16(a6)
	beq	I_107
	move.l	4(a2),a0
	move.l	a0,-(a7)
	move.l	d5,-(a7)
	move.l	d3,-(a7)
	lea	.Xulmul,a1
	jsr	(a1)
	move.l	(a7)+,a0
	add.l	d0,a0
	pea	(a0)
	jsr	_preShift
	add.w	#4,a7
I_107:
	add.l	#1,d3
I_92:
	cmp.l	(a2),d3
	blt	I_91
	move.l	d6,-(a7)
	jsr	_fclose
	pea	I_88
	jsr	_puts
	movem.l	-148(a6),d3/d4/d5/d6/d7/a2/a3/a4/a5
	unlk	a6
	rts
	.align	2
	.extern _initBG
_initBG:
	link	a6,#0
	pea	32768
	pea	131072
	move.l	_background,-(a7)
	jsr	__MemCpy
	unlk	a6
	rts
	.align	2
	.extern _restoreBG
_restoreBG:
	link	a6,#0
	pea	32768
	move.l	_background,-(a7)
	pea	131072
	jsr	__MemCpy
	unlk	a6
	rts
	.align	2
	.extern _BGtoScratch
_BGtoScratch:
	link	a6,#0
	pea	32768
	move.l	_background,-(a7)
	move.l	_scratch,-(a7)
	jsr	__MemCpy
	unlk	a6
	rts
	.align	2
	.extern _showScratch
_showScratch:
	link	a6,#0
	move.l	d3,-(a7)
	move.l	8(a6),d3
	move.l	12(a6),d0
	sub.l	d3,d0
	asl.l	#7,d0
	move.l	d0,-(a7)
	move.l	d3,d0
	asl.l	#7,d0
	add.l	_scratch,d0
	move.l	d0,-(a7)
	move.l	d3,d0
	asl.l	#7,d0
	add.l	#131072,d0
	move.l	d0,-(a7)
	jsr	__MemCpy
	move.l	-4(a6),d3
	unlk	a6
	rts
	.sect	.bss
	.align	2
	.extern _addresses
_addresses:
	.space	1024
	.extern _secondAddress
_secondAddress:
	.space	4
	.extern _bits
_bits:
	.space	16
	.extern _background
_background:
	.space	4
	.extern _scratch
_scratch:
	.space	4
	.sect	.text
